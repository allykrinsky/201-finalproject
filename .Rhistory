ifelse(gdp_plot$quarter == "Q2", "04",
ifelse(gdp_plot$quarter == "Q3", "07",
ifelse(gdp_plot$quarter == "Q4", "10", "NA"))))
dow_plot <- dow %>%
select(date, high, low) %>%
mutate(
avg = (high + low) / 2,
change = ((avg - lag(avg, 1)) / lag(avg, 1))  * 100
) %>% select(date, change) %>%
mutate(
year = substr(date, 1, 4),
month = substr(date, 6, 7),
month_year = paste0(year, "-", month)
) %>% group_by(month_year) %>%
summarise(
change_monthly = mean(change)
) %>% mutate(
month = substr(month_year, 6, 7),
year = substr(month_year, 1, 4),
date = as.yearmon(month_year, "%Y-%m")
)
#View(for_plot)
for_plot <- left_join(dow_plot, gdp_plot, by = c("month" = "quarter", "year" = "year"))
colnames(for_plot)[2] <- "dow_change"
colnames(for_plot)[6] <- "gdp_change"
for_plot <- for_plot %>%
gather(
key = type ,
value = value,
dow_change, gdp_change
)
for_plot <- filter(for_plot, is.na(value) == FALSE)
gdp_dow_plot <- function(year_1, year_2){
for_plot <- for_plot %>% filter(year >= year_1 & year <= year_2)
gdp_dow <- ggplot(data = for_plot) +
geom_line(mapping = aes(
x = date,
y = value,
color = type,
group = type
)) + xlab("Date") + ylab("Percent Change")
gdp_dow
}
#gdp_dow_plot(2014, 2017)
gdp_dow_plot(2014, 2017)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("zoo")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
output$gdp_dow <- renderPlot({gdp_dow_plot(input$slider[1], input$slider[2])})
output$gdp_graph <- renderPlotly({
compared_gdp(input$region, input$industry)
})
}
shinyApp(ui = my_ui, server = my_server)
library("shiny")
library("zoo")
library("dplyr")
library("tidyr")
source("carter.R")
source("Ally.R")
source("Claire.R")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"GDP vs. Dow Jones",
sidebarLayout(
sidebarPanel(
sliderInput(inputId = "slider", label = "Select Year",
min = 2014, max = 2018, value = c(2015,2016), sep = "")
),
mainPanel(
plotOutput("gdp_dow")
)
)
),
tabPanel(
"United States GDP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "region", label = "Select Region", selected = "Washington",
region_list
),
selectInput(inputId = "industry", label = "Select Indutry", selected = "All industry total", industry_list)
),
mainPanel(
plotlyOutput("gdp_graph")
)# main panel
)#sidebar layout
)# tabPanel
)
)
