summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = ag_types[[1]], group = year, color = year))
}
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list(1 = "average_close", 2 = "max_close", 3 = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = average_close, group = year, color = year))
}
create_monthly_dow_graph(1)
create_monthly_dow_graph <- function(ag_type){
ag_types <- list(1 = "average_close", 2 = "max_close", 3 = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = average_close, group = year, color = year))
}
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("average_close", "max_close", "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = average_close, group = year, color = year))
}
create_monthly_dow_graph(1)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = average_close, "2" = max_close, "3" = min_close)
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = average_close, group = year, color = year))
}
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = average_close, "2" = max_close, "3" = min_close)
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = ag_types[[ag_type]], group = year, color = year))
}
create_monthly_dow_graph(1)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = average_close, "2" = max_close, "3" = min_close)
print(ag_types[[ag_type]])
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = ag_types[[ag_type]], group = year, color = year))
}
create_monthly_dow_graph(1)
create_monthly_dow_graph(1)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
print(ag_types[[ag_type]])
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = ag_types[[ag_type]], group = year, color = year))
}
create_monthly_dow_graph(1)
create_monthly_dow_graph("1")
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
print(ag_types[[ag_type]])
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume))
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = ag_types[[ag_type]], group = year, color = year))
}
create_monthly_dow_graph("1")
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
print(ag_types[[ag_type]])
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year))
}
create_monthly_dow_graph("1")
create_monthly_dow_graph("2")
create_monthly_dow_graph("3")
source("carter.R")
my_ui <- fluidPage({
radioButtons("dist", "Aggregation Type:",
c("Average Closing" = "1",
"Maximum Closing" = "2",
"Minimum Closing" = "3"))
plotOutput("dow_monthly")
})
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
c("Average Closing" = "1",
"Maximum Closing" = "2",
"Minimum Closing" = "3"))
plotOutput("dow_monthly")
})
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
c("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3))
plotOutput("dow_monthly")
})
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3))
plotOutput("dow_monthly")
})
shinyApp(ui = my_ui, server = my_server)
create_monthly_dow_graph(3)
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3))
plotOutput("dow_monthly")
})
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3))
plotOutput("dow_monthly")
})
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
runApp()
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph("1")})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
plotOutput("dow_monthly")
})
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph("1")})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
runApp()
my_server <- function(input, output){
print(input$ag_type)
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
ag_selected <- reactive({
ag_selected <- input$ag_type
})
output$dow_monthly <- renderPlot({create_monthly_dow_graph(ag_selected)})
}
my_ui <- fluidPage({
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
plotOutput("dow_monthly")
})
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
ag_selected <- reactive({
ag_selected <- input$ag_type
})
print(ag_selected)
output$dow_monthly <- renderPlot({create_monthly_dow_graph(ag_selected)})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
ag_selected <- reactive({
ag_selected <- input$ag_type
})
print(ag_selected)
output$dow_monthly <- renderPlot({create_monthly_dow_graph(ag_selected())})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
ag_selected <- reactive({
ag_selected <- input$ag_type
})
print(ag_selected())
output$dow_monthly <- renderPlot({create_monthly_dow_graph(ag_selected())})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
ag_selected <- reactive({
ag_selected <- input$ag_type
print(ag_selected())
})
output$dow_monthly <- renderPlot({create_monthly_dow_graph(ag_selected())})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input, output){
output$dow_monthly <- renderPlot({create_monthly_dow_graph(input$ag_type)})
}
shinyApp(ui = my_ui, server = my_server)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year))
}
shinyApp(ui = my_ui, server = my_server)
print(ag_type)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
print(ag_type)
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year))
}
shinyApp(ui = my_ui, server = my_server)
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
if(is.null(ag_type)){
ag_type <- "1"
}
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year))
}
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1),
plotOutput("dow_monthly")
)
shinyApp(ui = my_ui, server = my_server)
cor(dow_monthly, dow_monthly$month, dow_monthly$average_close)
cor(dow_monthly, dow_monthly$month, dow_monthly$average_close, use = "everything")
cor(dow_monthly$month, dow_monthly$average_close, use = "everything")
cor(dow_monthly$month_num, dow_monthly$average_close, use = "everything")
is.numeric(dow_monthly$month_num)
cor(as.numeric(dow_monthly$month_num), as.numeric(dow_monthly$average_close), use = "everything")
cor(as.numeric(dow_monthly$month_num), as.numeric(dow_monthly$average_close), use = "everything", method = "spearman")
cor(as.numeric(dow_monthly$month_num), as.numeric(dow_monthly$average_close), use = "everything", method = "kendall")
cor(as.numeric(dow_monthly$month_num), as.numeric(dow_monthly$average_close), use = "everything")
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1),
plotOutput("dow_monthly")
)
)
)
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1),
plotOutput("dow_monthly")
),
tabPanel(
"Test Panel #2"
)
)
)
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"Test Panel #2"
)
)
)
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
titlePanel("GDP vs DOW Jones"),
tabsetPanel(type = "tabs",
tabPanel(
"DOW Jones Seasonal",
sidebarLayout(
sidebarPanel(
radioButtons("ag_type", "Aggregation Type:",
list("Average Closing" = 1,
"Maximum Closing" = 2,
"Minimum Closing" = 3), 1)
),
mainPanel(
plotOutput("dow_monthly")
)
)
),
tabPanel(
"Test Panel #2",
sidebarLayout(
sidebarPanel(
#Controls here
),
mainPanel(
#Visualization here
)
)
)
)
)
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
runApp()
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
if(is.null(ag_type)){
ag_type <- "1"
}
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year)) +
labs(title = "DOW Closing vs Month", x = "Month", y = "GDP Value")+
xlab(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
}
runApp()
# How does the time of year affect the Dow Jones?
create_monthly_dow_graph <- function(ag_type){
if(is.null(ag_type)){
ag_type <- "1"
}
ag_types <- list("1" = "average_close", "2" = "max_close", "3" = "min_close")
dow_monthly <- dow %>%
mutate(month = substr(label, 1, 4), year = substr(date, 1, 4), month_num = substr(date, 6, 7)) %>%
group_by(month, year, month_num) %>%
summarise(average_close = mean(close), max_close = max(close), min_close = min(close), average_volume = mean(volume)) %>%
select(month_num, month, year, value = ag_types[[ag_type]])
ggplot(data = dow_monthly) +
geom_line(mapping = aes(x = month_num, y = value, group = year, color = year)) +
labs(title = "DOW Closing vs Month", x = "Month", y = "GDP Value")+
scale_x_discrete(labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
}
shinyApp(ui = my_ui, server = my_server)
shiny::runApp()
library("dplyr")
library("tidyr")
library("httr")
library("stringr")
library("ggplot2")
library("shiny")
library("plotly")
gdp <- read.csv("data/gdp.csv",stringsAsFactors = FALSE)
gdp <- select(gdp, -1, -3)
# get the list of region
get_region_name <- filter(gdp, Description == "All industry total")
region_list <- get_state_name$GeoName
# get the list of industry
get_all_industry <- filter(gdp, GeoName == "Washington")
industry_list <- trimws(get_all_industry$Description, "left")
compared_gdp <- function(state, industry){
state_gdp <- filter(gdp, GeoName == state | GeoName == "United States*")
# remove the blank space in the begining
remove_space <- trimws(state_gdp$Description, "left")
state_gdp$Description = remove_space
industry_gdp <- filter(state_gdp,Description == industry)
#View(industry_gdp)
gathered_industry <- gather(industry_gdp, time, GDP, 3:57) %>%
# add a column for the year
mutate(year = substr(time, 2,5))
gathered_industry$GDP = as.numeric(gathered_industry$GDP)
p <- ggplot(data = gathered_industry) +
geom_line(mapping = aes(x= year, y = GDP, group = GeoName))+
geom_point(mapping = aes(x= year, y = GDP, group = GeoName))+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")
)+
labs(
title = paste("The GDP in United States and",state, "from 2016 to 2018 in", industry),
x = "year",
y = "GDP"
)
ggplotly(p)
}
#compared_gdp("Washington",industry <- "Construction")
library("dplyr")
library("tidyr")
library("httr")
library("stringr")
library("ggplot2")
library("shiny")
library("plotly")
gdp <- read.csv("data/gdp.csv",stringsAsFactors = FALSE)
gdp <- select(gdp, -1, -3)
# get the list of region
get_region_name <- filter(gdp, Description == "All industry total")
region_list <- get_region_name$GeoName
# get the list of industry
get_all_industry <- filter(gdp, GeoName == "Washington")
industry_list <- trimws(get_all_industry$Description, "left")
compared_gdp <- function(state, industry){
state_gdp <- filter(gdp, GeoName == state | GeoName == "United States*")
# remove the blank space in the begining
remove_space <- trimws(state_gdp$Description, "left")
state_gdp$Description = remove_space
industry_gdp <- filter(state_gdp,Description == industry)
#View(industry_gdp)
gathered_industry <- gather(industry_gdp, time, GDP, 3:57) %>%
# add a column for the year
mutate(year = substr(time, 2,5))
gathered_industry$GDP = as.numeric(gathered_industry$GDP)
p <- ggplot(data = gathered_industry) +
geom_line(mapping = aes(x= year, y = GDP, group = GeoName))+
geom_point(mapping = aes(x= year, y = GDP, group = GeoName))+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")
)+
labs(
title = paste("The GDP in United States and",state, "from 2016 to 2018 in", industry),
x = "year",
y = "GDP"
)
ggplotly(p)
}
#compared_gdp("Washington",industry <- "Construction")
runApp()
shiny::runApp()
